{
    "/Users/yeonjoon-mac/Desktop/Workspace/code-diagram/poc/reporter.py": {
        "nodes": [
            {
                "id": "reporter.generate_report",
                "function_name": "generate_report",
                "file": "poc/reporter.py",
                "line_start": 2,
                "line_end": 21,
                "description": "Function that prints a report based on the analysis dictionary, including averages, medians, counts, and comparative messages."
            }
        ],
        "edges": []
    },
    "/Users/yeonjoon-mac/Desktop/Workspace/code-diagram/poc/analyzer.py": {
        "nodes": [
            {
                "id": "analyzer.analyze_data",
                "function_name": "analyze_data",
                "file": "poc/analyzer.py",
                "line_start": 4,
                "line_end": 16,
                "description": "Function that analyzes a list of numeric data: computes average, median, and partitions into high and low values."
            }
        ],
        "edges": []
    },
    "/Users/yeonjoon-mac/Desktop/Workspace/code-diagram/poc/processor.py": {
        "nodes": [
            {
                "id": "processor.process_data",
                "function_name": "process_data",
                "file": "poc/processor.py",
                "line_start": 3,
                "line_end": 15,
                "description": "Processes a list of numbers, branching to specific handlers based on divisibility rules."
            },
            {
                "id": "processor.handle_div3",
                "function_name": "handle_div3",
                "file": "poc/processor.py",
                "line_start": 17,
                "line_end": 19,
                "description": "Handles numbers divisible by 3 and returns the integer quotient."
            },
            {
                "id": "processor.handle_even",
                "function_name": "handle_even",
                "file": "poc/processor.py",
                "line_start": 21,
                "line_end": 23,
                "description": "Handles even numbers and returns half the value."
            },
            {
                "id": "processor.handle_other",
                "function_name": "handle_other",
                "file": "poc/processor.py",
                "line_start": 25,
                "line_end": 27,
                "description": "Handles numbers not divisible by 2 or 3, applying the 3n+1 transformation."
            }
        ],
        "edges": [
            {
                "id": "e0",
                "source": "processor.process_data",
                "target": "processor.handle_div3",
                "description": "Called when num % 3 == 0"
            },
            {
                "id": "e1",
                "source": "processor.process_data",
                "target": "processor.handle_even",
                "description": "Called when num % 2 == 0 and not divisible by 3"
            },
            {
                "id": "e2",
                "source": "processor.process_data",
                "target": "processor.handle_other",
                "description": "Called for all other num values"
            }
        ]
    },
    "/Users/yeonjoon-mac/Desktop/Workspace/code-diagram/poc/main.py": {
        "nodes": [
            {
                "id": "main.main",
                "function_name": "main",
                "file": "poc/main.py",
                "line_start": 7,
                "line_end": 15,
                "description": "Main function that orchestrates the workflow: fetching, processing, analyzing data, and generating a report."
            }
        ],
        "edges": [
            {
                "id": "e0",
                "source": "main.main",
                "target": "fetcher.fetch_data"
            },
            {
                "id": "e1",
                "source": "main.main",
                "target": "processor.process_data"
            },
            {
                "id": "e2",
                "source": "main.main",
                "target": "analyzer.analyze_data"
            },
            {
                "id": "e3",
                "source": "main.main",
                "target": "reporter.generate_report"
            }
        ]
    },
    "/Users/yeonjoon-mac/Desktop/Workspace/code-diagram/poc/fetcher.py": {
        "nodes": [
            {
                "id": "fetcher.fetch_data",
                "function_name": "fetch_data",
                "file": "poc/fetcher.py",
                "line_start": 4,
                "line_end": 13,
                "description": "Function to fetch data with up to `retries` attempts; returns a list of random integers on success or raises ConnectionError after exhausting retries."
            }
        ],
        "edges": []
    }
}