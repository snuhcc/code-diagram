{
    "nodes": [
        {
            "id": "utils.data_augmentation.__init__",
            "function_name": "__init__",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 21,
            "line_end": 60,
            "description": "Initializer for ImageGenerator class."
        },
        {
            "id": "utils.data_augmentation._do_random_crop",
            "function_name": "_do_random_crop",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 61,
            "line_end": 81,
            "description": "Perform random crop and zoom on the image array."
        },
        {
            "id": "utils.data_augmentation.do_random_rotation",
            "function_name": "do_random_rotation",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 83,
            "line_end": 103,
            "description": "Perform random rotation and zoom on the image array."
        },
        {
            "id": "utils.data_augmentation._gray_scale",
            "function_name": "_gray_scale",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 105,
            "line_end": 107,
            "description": "Convert image array to grayscale."
        },
        {
            "id": "utils.data_augmentation.saturation",
            "function_name": "saturation",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 108,
            "line_end": 114,
            "description": "Adjust saturation of the image array."
        },
        {
            "id": "utils.data_augmentation.brightness",
            "function_name": "brightness",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 116,
            "line_end": 120,
            "description": "Adjust brightness of the image array."
        },
        {
            "id": "utils.data_augmentation.contrast",
            "function_name": "contrast",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 122,
            "line_end": 128,
            "description": "Adjust contrast of the image array."
        },
        {
            "id": "utils.data_augmentation.lighting",
            "function_name": "lighting",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 130,
            "line_end": 137,
            "description": "Apply lighting noise to the image array."
        },
        {
            "id": "utils.data_augmentation.horizontal_flip",
            "function_name": "horizontal_flip",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 139,
            "line_end": 145,
            "description": "Randomly flip the image horizontally and adjust box corners."
        },
        {
            "id": "utils.data_augmentation.vertical_flip",
            "function_name": "vertical_flip",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 146,
            "line_end": 151,
            "description": "Randomly flip the image vertically and adjust box corners."
        },
        {
            "id": "utils.data_augmentation.transform",
            "function_name": "transform",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 153,
            "line_end": 168,
            "description": "Apply a sequence of color jitter, lighting and flips to the image."
        },
        {
            "id": "utils.data_augmentation.preprocess_images",
            "function_name": "preprocess_images",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 170,
            "line_end": 172,
            "description": "Preprocess images using imported preprocess_input."
        },
        {
            "id": "utils.data_augmentation.flow",
            "function_name": "flow",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 173,
            "line_end": 232,
            "description": "Generate batches of images and targets with optional augmentation."
        },
        {
            "id": "utils.data_augmentation._wrap_in_dictionary",
            "function_name": "_wrap_in_dictionary",
            "file": "face_classification/utils/data_augmentation.py",
            "line_start": 233,
            "line_end": 235,
            "description": "Wrap inputs and targets in a dictionary for model consumption."
        }
    ],
    "edges": [
        {
            "id": "data_augmentation.e0",
            "source": "utils.data_augmentation.saturation",
            "target": "utils.data_augmentation._gray_scale"
        },
        {
            "id": "data_augmentation.e1",
            "source": "utils.data_augmentation.contrast",
            "target": "utils.data_augmentation._gray_scale"
        },
        {
            "id": "data_augmentation.e2",
            "source": "utils.data_augmentation.transform",
            "target": "utils.data_augmentation.saturation"
        },
        {
            "id": "data_augmentation.e3",
            "source": "utils.data_augmentation.transform",
            "target": "utils.data_augmentation.brightness"
        },
        {
            "id": "data_augmentation.e4",
            "source": "utils.data_augmentation.transform",
            "target": "utils.data_augmentation.contrast"
        },
        {
            "id": "data_augmentation.e5",
            "source": "utils.data_augmentation.transform",
            "target": "utils.data_augmentation.lighting"
        },
        {
            "id": "data_augmentation.e6",
            "source": "utils.data_augmentation.transform",
            "target": "utils.data_augmentation.horizontal_flip"
        },
        {
            "id": "data_augmentation.e7",
            "source": "utils.data_augmentation.transform",
            "target": "utils.data_augmentation.vertical_flip"
        },
        {
            "id": "data_augmentation.e8",
            "source": "utils.data_augmentation.preprocess_images",
            "target": "utils.preprocessor.preprocess_input"
        },
        {
            "id": "data_augmentation.e9",
            "source": "utils.data_augmentation.flow",
            "target": "utils.preprocessor._imread"
        },
        {
            "id": "data_augmentation.e10",
            "source": "utils.data_augmentation.flow",
            "target": "utils.preprocessor._imresize"
        },
        {
            "id": "data_augmentation.e11",
            "source": "utils.data_augmentation.flow",
            "target": "utils.data_augmentation._do_random_crop"
        },
        {
            "id": "data_augmentation.e12",
            "source": "utils.data_augmentation.flow",
            "target": "utils.data_augmentation.transform"
        },
        {
            "id": "data_augmentation.e13",
            "source": "utils.data_augmentation.flow",
            "target": "utils.preprocessor.to_categorical"
        },
        {
            "id": "data_augmentation.e14",
            "source": "utils.data_augmentation.flow",
            "target": "utils.data_augmentation.preprocess_images"
        },
        {
            "id": "data_augmentation.e15",
            "source": "utils.data_augmentation.flow",
            "target": "utils.data_augmentation._wrap_in_dictionary"
        }
    ]
}