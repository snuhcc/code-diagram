{
    "nodes": [
        {
            "id": "utils.grad_cam.reset_optimizer_weights",
            "function_name": "reset_optimizer_weights",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 15,
            "line_end": 18,
            "description": "Remove optimizer weights from an HDF5 model file."
        },
        {
            "id": "utils.grad_cam.target_category_loss",
            "function_name": "target_category_loss",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 21,
            "line_end": 22,
            "description": "Apply a one-hot mask to the model output for a target category."
        },
        {
            "id": "utils.grad_cam.target_category_loss_output_shape",
            "function_name": "target_category_loss_output_shape",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 25,
            "line_end": 26,
            "description": "Return the output shape unchanged for the target category loss layer."
        },
        {
            "id": "utils.grad_cam.normalize",
            "function_name": "normalize",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 29,
            "line_end": 31,
            "description": "Normalize a tensor by its L2 norm."
        },
        {
            "id": "utils.grad_cam.load_image",
            "function_name": "load_image",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 34,
            "line_end": 37,
            "description": "Preprocess and expand dims of an image array for model input."
        },
        {
            "id": "utils.grad_cam.register_gradient",
            "function_name": "register_gradient",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 40,
            "line_end": 47,
            "description": "Register a custom guided backpropagation gradient for ReLU."
        },
        {
            "id": "utils.grad_cam.compile_saliency_function",
            "function_name": "compile_saliency_function",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 50,
            "line_end": 55,
            "description": "Compile a Keras function to compute saliency maps from a given activation layer."
        },
        {
            "id": "utils.grad_cam.modify_backprop",
            "function_name": "modify_backprop",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 58,
            "line_end": 79,
            "description": "Override ReLU gradient and reload model for guided backpropagation tasks."
        },
        {
            "id": "utils.grad_cam.deprocess_image",
            "function_name": "deprocess_image",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 82,
            "line_end": 102,
            "description": "Convert a processed tensor back into a valid image array."
        },
        {
            "id": "utils.grad_cam.compile_gradient_function",
            "function_name": "compile_gradient_function",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 105,
            "line_end": 119,
            "description": "Compile a Keras function to compute convolution outputs and gradients for Grad-CAM."
        },
        {
            "id": "utils.grad_cam.calculate_gradient_weighted_CAM",
            "function_name": "calculate_gradient_weighted_CAM",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 122,
            "line_end": 141,
            "description": "Compute the Grad-CAM heatmap and overlay it on the image."
        },
        {
            "id": "utils.grad_cam.calculate_guided_gradient_CAM",
            "function_name": "calculate_guided_gradient_CAM",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 144,
            "line_end": 151,
            "description": "Combine guided backpropagation with Grad-CAM to produce guided Grad-CAM."
        },
        {
            "id": "utils.grad_cam.calculate_guided_gradient_CAM_v2",
            "function_name": "calculate_guided_gradient_CAM_v2",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 155,
            "line_end": 167,
            "description": "Alternative version of guided Grad-CAM with resizing."
        },
        {
            "id": "utils.grad_cam.Global",
            "function_name": "Global",
            "file": "face_classification/utils/grad_cam.py",
            "line_start": 170,
            "line_end": 190,
            "description": "Script entry point calling functions to generate and save guided Grad-CAM."
        }
    ],
    "edges": [
        {
            "id": "grad_cam.e0",
            "source": "utils.grad_cam.load_image",
            "target": "face_classification/utils/preprocessor.preprocess_input"
        },
        {
            "id": "grad_cam.e1",
            "source": "utils.grad_cam.register_gradient",
            "target": "tensorflow.python.framework.ops.RegisterGradient"
        },
        {
            "id": "grad_cam.e2",
            "source": "utils.grad_cam.modify_backprop",
            "target": "keras.models.load_model"
        },
        {
            "id": "grad_cam.e3",
            "source": "utils.grad_cam.compile_saliency_function",
            "target": "keras.backend.gradients"
        },
        {
            "id": "grad_cam.e4",
            "source": "utils.grad_cam.compile_saliency_function",
            "target": "keras.backend.function"
        },
        {
            "id": "grad_cam.e5",
            "source": "utils.grad_cam.compile_gradient_function",
            "target": "utils.grad_cam.target_category_loss"
        },
        {
            "id": "grad_cam.e6",
            "source": "utils.grad_cam.compile_gradient_function",
            "target": "utils.grad_cam.normalize"
        },
        {
            "id": "grad_cam.e7",
            "source": "utils.grad_cam.compile_gradient_function",
            "target": "keras.backend.gradients"
        },
        {
            "id": "grad_cam.e8",
            "source": "utils.grad_cam.compile_gradient_function",
            "target": "keras.backend.function"
        },
        {
            "id": "grad_cam.e9",
            "source": "utils.grad_cam.calculate_guided_gradient_CAM",
            "target": "utils.grad_cam.calculate_gradient_weighted_CAM"
        },
        {
            "id": "grad_cam.e10",
            "source": "utils.grad_cam.calculate_guided_gradient_CAM",
            "target": "utils.grad_cam.deprocess_image"
        },
        {
            "id": "grad_cam.e11",
            "source": "utils.grad_cam.calculate_guided_gradient_CAM_v2",
            "target": "utils.grad_cam.calculate_gradient_weighted_CAM"
        },
        {
            "id": "grad_cam.e12",
            "source": "utils.grad_cam.calculate_guided_gradient_CAM_v2",
            "target": "utils.grad_cam.deprocess_image"
        },
        {
            "id": "grad_cam.e13",
            "source": "utils.grad_cam.Global",
            "target": "utils.grad_cam.load_image"
        },
        {
            "id": "grad_cam.e14",
            "source": "utils.grad_cam.Global",
            "target": "keras.models.load_model"
        },
        {
            "id": "grad_cam.e15",
            "source": "utils.grad_cam.Global",
            "target": "utils.grad_cam.compile_gradient_function"
        },
        {
            "id": "grad_cam.e16",
            "source": "utils.grad_cam.Global",
            "target": "utils.grad_cam.register_gradient"
        },
        {
            "id": "grad_cam.e17",
            "source": "utils.grad_cam.Global",
            "target": "utils.grad_cam.modify_backprop"
        },
        {
            "id": "grad_cam.e18",
            "source": "utils.grad_cam.Global",
            "target": "utils.grad_cam.compile_saliency_function"
        },
        {
            "id": "grad_cam.e19",
            "source": "utils.grad_cam.Global",
            "target": "utils.grad_cam.calculate_guided_gradient_CAM"
        },
        {
            "id": "grad_cam.e20",
            "source": "utils.grad_cam.Global",
            "target": "cv2.imwrite"
        },
        {
            "id": "grad_cam.e21",
            "source": "utils.grad_cam.Global",
            "target": "pickle.load"
        },
        {
            "id": "grad_cam.e22",
            "source": "utils.grad_cam.Global",
            "target": "numpy.argmax"
        }
    ]
}