{
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/validator.py": {
        "nodes": [
            {
                "id": "validator.validate_data",
                "function_name": "validate_data",
                "file": "poc/validator.py",
                "line_start": 1,
                "line_end": 7,
                "description": "Validates data by filtering non-integers, removing negatives, and checking range."
            },
            {
                "id": "validator.remove_negatives",
                "function_name": "remove_negatives",
                "file": "poc/validator.py",
                "line_start": 9,
                "line_end": 11,
                "description": "Removes negative integers from the data list."
            },
            {
                "id": "validator.check_range",
                "function_name": "check_range",
                "file": "poc/validator.py",
                "line_start": 13,
                "line_end": 15,
                "description": "Filters data to be within a specified min and max range."
            }
        ],
        "edges": [
            {
                "id": "validator.e0",
                "source": "validator.validate_data",
                "target": "validator.remove_negatives"
            },
            {
                "id": "validator.e1",
                "source": "validator.validate_data",
                "target": "validator.check_range"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/aggregator.py": {
        "nodes": [
            {
                "id": "aggregator.aggregate_data",
                "function_name": "aggregate_data",
                "file": "poc/aggregator.py",
                "line_start": 1,
                "line_end": 11,
                "description": "Aggregates data to compute count, sum, max, min, and average, then formats and prints a summary."
            },
            {
                "id": "aggregator.compute_average",
                "function_name": "compute_average",
                "file": "poc/aggregator.py",
                "line_start": 13,
                "line_end": 16,
                "description": "Computes the average of the data."
            },
            {
                "id": "aggregator.format_summary",
                "function_name": "format_summary",
                "file": "poc/aggregator.py",
                "line_start": 17,
                "line_end": 19,
                "description": "Formats the statistics summary into a string."
            }
        ],
        "edges": [
            {
                "id": "aggregator.e0",
                "source": "aggregator.aggregate_data",
                "target": "aggregator.compute_average"
            },
            {
                "id": "aggregator.e1",
                "source": "aggregator.aggregate_data",
                "target": "aggregator.format_summary"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/reporter.py": {
        "nodes": [
            {
                "id": "reporter.generate_report",
                "function_name": "generate_report",
                "file": "poc/reporter.py",
                "line_start": 2,
                "line_end": 21,
                "description": "Generate report based on analysis dictionary."
            }
        ],
        "edges": []
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/analyzer.py": {
        "nodes": [
            {
                "id": "analyzer.analyze_data",
                "function_name": "analyze_data",
                "file": "poc/analyzer.py",
                "line_start": 4,
                "line_end": 16,
                "description": "Analyze data to compute average, median, high and low values."
            }
        ],
        "edges": [
            {
                "id": "analyzer.e0",
                "source": "analyzer.analyze_data",
                "target": "statistics.mean"
            },
            {
                "id": "analyzer.e1",
                "source": "analyzer.analyze_data",
                "target": "statistics.median"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/processor.py": {
        "nodes": [
            {
                "id": "processor.process_data",
                "function_name": "process_data",
                "file": "poc/processor.py",
                "line_start": 3,
                "line_end": 15,
                "description": "Iterates over data and dispatches each number to the appropriate handler based on divisibility."
            },
            {
                "id": "processor.handle_div3",
                "function_name": "handle_div3",
                "file": "poc/processor.py",
                "line_start": 17,
                "line_end": 20,
                "description": "Handles numbers divisible by 3 by dividing them by 3."
            },
            {
                "id": "processor.handle_even",
                "function_name": "handle_even",
                "file": "poc/processor.py",
                "line_start": 21,
                "line_end": 23,
                "description": "Handles even numbers by dividing them by 2."
            },
            {
                "id": "processor.handle_other",
                "function_name": "handle_other",
                "file": "poc/processor.py",
                "line_start": 25,
                "line_end": 27,
                "description": "Handles all other numbers with the formula num * 3 + 1."
            }
        ],
        "edges": [
            {
                "id": "processor.e0",
                "source": "processor.process_data",
                "target": "processor.handle_div3"
            },
            {
                "id": "processor.e1",
                "source": "processor.process_data",
                "target": "processor.handle_even"
            },
            {
                "id": "processor.e2",
                "source": "processor.process_data",
                "target": "processor.handle_other"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/filterer.py": {
        "nodes": [
            {
                "id": "filterer.filter_even",
                "function_name": "filter_even",
                "file": "poc/filterer.py",
                "line_start": 1,
                "line_end": 4,
                "description": "Filters data by keeping even numbers greater than 10."
            },
            {
                "id": "filterer.remove_odd",
                "function_name": "remove_odd",
                "file": "poc/filterer.py",
                "line_start": 6,
                "line_end": 8,
                "description": "Removes odd numbers from the data."
            },
            {
                "id": "filterer.filter_gt",
                "function_name": "filter_gt",
                "file": "poc/filterer.py",
                "line_start": 10,
                "line_end": 12,
                "description": "Filters numbers greater than a given threshold."
            }
        ],
        "edges": [
            {
                "id": "filterer.e0",
                "source": "filterer.filter_even",
                "target": "filterer.remove_odd"
            },
            {
                "id": "filterer.e1",
                "source": "filterer.filter_even",
                "target": "filterer.filter_gt"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/transformer.py": {
        "nodes": [
            {
                "id": "transformer.transform_special",
                "function_name": "transform_special",
                "file": "poc/transformer.py",
                "line_start": 3,
                "line_end": 8,
                "description": "Transforms special data by normalizing, processing, and scaling."
            },
            {
                "id": "transformer.normalize",
                "function_name": "normalize",
                "file": "poc/transformer.py",
                "line_start": 10,
                "line_end": 13,
                "description": "Normalizes data to a [0,1] range based on the maximum value."
            },
            {
                "id": "transformer.scale",
                "function_name": "scale",
                "file": "poc/transformer.py",
                "line_start": 15,
                "line_end": 17,
                "description": "Scales data by a given factor."
            }
        ],
        "edges": [
            {
                "id": "transformer.e0",
                "source": "transformer.transform_special",
                "target": "transformer.normalize"
            },
            {
                "id": "transformer.e1",
                "source": "transformer.transform_special",
                "target": "processor.process_data"
            },
            {
                "id": "transformer.e2",
                "source": "transformer.transform_special",
                "target": "transformer.scale"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/main.py": {
        "nodes": [
            {
                "id": "poc.main.main",
                "function_name": "main",
                "file": "poc/main.py",
                "line_start": 11,
                "line_end": 48,
                "description": "Entry point for CLI to orchestrate data pipeline."
            }
        ],
        "edges": [
            {
                "id": "main.e0",
                "source": "poc.main.main",
                "target": "fetcher.fetch_data"
            },
            {
                "id": "main.e1",
                "source": "poc.main.main",
                "target": "processor.process_data"
            },
            {
                "id": "main.e2",
                "source": "poc.main.main",
                "target": "analyzer.analyze_data"
            },
            {
                "id": "main.e3",
                "source": "poc.main.main",
                "target": "reporter.generate_report"
            },
            {
                "id": "main.e4",
                "source": "poc.main.main",
                "target": "validator.validate_data"
            },
            {
                "id": "main.e5",
                "source": "poc.main.main",
                "target": "processor.process_data"
            },
            {
                "id": "main.e6",
                "source": "poc.main.main",
                "target": "analyzer.analyze_data"
            },
            {
                "id": "main.e7",
                "source": "poc.main.main",
                "target": "aggregator.aggregate_data"
            },
            {
                "id": "main.e8",
                "source": "poc.main.main",
                "target": "reporter.generate_report"
            },
            {
                "id": "main.e9",
                "source": "poc.main.main",
                "target": "filterer.filter_even"
            },
            {
                "id": "main.e10",
                "source": "poc.main.main",
                "target": "processor.process_data"
            },
            {
                "id": "main.e11",
                "source": "poc.main.main",
                "target": "analyzer.analyze_data"
            },
            {
                "id": "main.e12",
                "source": "poc.main.main",
                "target": "reporter.generate_report"
            },
            {
                "id": "main.e13",
                "source": "poc.main.main",
                "target": "transformer.transform_special"
            },
            {
                "id": "main.e14",
                "source": "poc.main.main",
                "target": "analyzer.analyze_data"
            },
            {
                "id": "main.e15",
                "source": "poc.main.main",
                "target": "reporter.generate_report"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/fetcher.py": {
        "nodes": [
            {
                "id": "fetcher.fetch_data",
                "function_name": "fetch_data",
                "file": "poc/fetcher.py",
                "line_start": 4,
                "line_end": 13,
                "description": "Fetches data with up to a given number of retries."
            }
        ],
        "edges": [
            {
                "id": "fetcher.e0",
                "source": "fetcher.fetch_data",
                "target": "random.random"
            },
            {
                "id": "fetcher.e1",
                "source": "fetcher.fetch_data",
                "target": "random.randint"
            }
        ]
    }
}