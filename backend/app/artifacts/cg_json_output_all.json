{
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/reporter.py": {
        "nodes": [
            {
                "id": "reporter.generate_report",
                "function_name": "generate_report",
                "file": "poc/reporter.py",
                "line_start": 2,
                "line_end": 21,
                "description": "Generates a textual report from the analysis dictionary, printing average, median, counts of high/low values, and a comparison message."
            }
        ],
        "edges": []
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/analyzer.py": {
        "nodes": [
            {
                "id": "analyzer.analyze_data",
                "function_name": "analyze_data",
                "file": "poc/analyzer.py",
                "line_start": 4,
                "line_end": 16,
                "description": "Function that computes average and median of the input data, partitions values into high and low lists, and returns the results."
            }
        ],
        "edges": [
            {
                "id": "analyzer.e0",
                "source": "analyzer.analyze_data",
                "target": "statistics.mean",
                "description": "Calls mean() to compute the average of data."
            },
            {
                "id": "analyzer.e1",
                "source": "analyzer.analyze_data",
                "target": "statistics.median",
                "description": "Calls median() to compute the median of data."
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/processor.py": {
        "nodes": [
            {
                "id": "processor.process_data",
                "function_name": "process_data",
                "file": "poc/processor.py",
                "line_start": 3,
                "line_end": 15,
                "description": "Entry point: iterates over data and delegates handling based on divisibility."
            },
            {
                "id": "processor.handle_div3",
                "function_name": "handle_div3",
                "file": "poc/processor.py",
                "line_start": 17,
                "line_end": 19,
                "description": "Handles numbers divisible by 3; divides by 3."
            },
            {
                "id": "processor.handle_even",
                "function_name": "handle_even",
                "file": "poc/processor.py",
                "line_start": 21,
                "line_end": 23,
                "description": "Handles even numbers; divides by 2."
            },
            {
                "id": "processor.handle_other",
                "function_name": "handle_other",
                "file": "poc/processor.py",
                "line_start": 25,
                "line_end": 27,
                "description": "Handles all other numbers; applies num * 3 + 1."
            }
        ],
        "edges": [
            {
                "id": "processor.e0",
                "source": "processor.process_data",
                "target": "processor.handle_div3",
                "description": "Called when num % 3 == 0"
            },
            {
                "id": "processor.e1",
                "source": "processor.process_data",
                "target": "processor.handle_even",
                "description": "Called when num % 2 == 0 and not divisible by 3"
            },
            {
                "id": "processor.e2",
                "source": "processor.process_data",
                "target": "processor.handle_other",
                "description": "Called for all other numbers"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/main.py": {
        "nodes": [
            {
                "id": "main.main",
                "function_name": "main",
                "file": "poc/main.py",
                "line_start": 1,
                "line_end": 17,
                "description": "Main function that orchestrates the data fetching, processing, analysis, and reporting workflow."
            }
        ],
        "edges": [
            {
                "id": "main.e0",
                "source": "main.main",
                "target": "fetcher.fetch_data"
            },
            {
                "id": "main.e1",
                "source": "main.main",
                "target": "processor.process_data"
            },
            {
                "id": "main.e2",
                "source": "main.main",
                "target": "analyzer.analyze_data"
            },
            {
                "id": "main.e3",
                "source": "main.main",
                "target": "reporter.generate_report"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/fetcher.py": {
        "nodes": [
            {
                "id": "fetcher.fetch_data",
                "function_name": "fetch_data",
                "file": "poc/fetcher.py",
                "line_start": 4,
                "line_end": 13,
                "description": "Function to fetch data with a retry mechanism; retries up to `retries` times before raising a ConnectionError."
            }
        ],
        "edges": []
    }
}