{
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/reporter.py": {
        "nodes": [
            {
                "id": "poc.reporter.generate_report",
                "function_name": "generate_report",
                "file": "poc/reporter.py",
                "line_start": 2,
                "line_end": 21,
                "description": "Generates a textual report from the analysis dictionary, printing average, median, counts of high/low values, and comparison messages."
            }
        ],
        "edges": []
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/analyzer.py": {
        "nodes": [
            {
                "id": "analyzer.analyze_data",
                "function_name": "analyze_data",
                "file": "poc/analyzer.py",
                "line_start": 4,
                "line_end": 16,
                "description": "Function that analyzes a list of numbers: computes average and median, and separates values above and below or equal to the average."
            }
        ],
        "edges": [
            {
                "id": "e0",
                "source": "analyzer.analyze_data",
                "target": "statistics.mean"
            },
            {
                "id": "e1",
                "source": "analyzer.analyze_data",
                "target": "statistics.median"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/processor.py": {
        "nodes": [
            {
                "id": "processor.process_data",
                "function_name": "process_data",
                "file": "poc/processor.py",
                "line_start": 3,
                "line_end": 15,
                "description": "Processes a list of numbers, dispatching each to a branching handler based on divisibility."
            },
            {
                "id": "processor.handle_div3",
                "function_name": "handle_div3",
                "file": "poc/processor.py",
                "line_start": 17,
                "line_end": 19,
                "description": "Handles numbers divisible by 3 by dividing them by 3."
            },
            {
                "id": "processor.handle_even",
                "function_name": "handle_even",
                "file": "poc/processor.py",
                "line_start": 21,
                "line_end": 23,
                "description": "Handles even numbers by dividing them by 2."
            },
            {
                "id": "processor.handle_other",
                "function_name": "handle_other",
                "file": "poc/processor.py",
                "line_start": 25,
                "line_end": 27,
                "description": "Handles all other numbers by applying the transformation n*3 + 1."
            }
        ],
        "edges": [
            {
                "id": "e0",
                "source": "processor.process_data",
                "target": "processor.handle_div3",
                "description": "Calls when num % 3 == 0"
            },
            {
                "id": "e1",
                "source": "processor.process_data",
                "target": "processor.handle_even",
                "description": "Calls when num % 2 == 0 and not divisible by 3"
            },
            {
                "id": "e2",
                "source": "processor.process_data",
                "target": "processor.handle_other",
                "description": "Calls for all other cases"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/main.py": {
        "nodes": [
            {
                "id": "main.main",
                "function_name": "main",
                "file": "poc/main.py",
                "line_start": 7,
                "line_end": 15,
                "description": "Main function that orchestrates the workflow: fetching, processing, analysis, and reporting."
            }
        ],
        "edges": [
            {
                "id": "e0",
                "source": "main.main",
                "target": "fetcher.fetch_data"
            },
            {
                "id": "e1",
                "source": "main.main",
                "target": "processor.process_data"
            },
            {
                "id": "e2",
                "source": "main.main",
                "target": "analyzer.analyze_data"
            },
            {
                "id": "e3",
                "source": "main.main",
                "target": "reporter.generate_report"
            }
        ]
    },
    "/Users/kyochul_jang/Desktop/Project/code-diagram/poc/fetcher.py": {
        "nodes": [
            {
                "id": "fetcher.fetch_data",
                "function_name": "fetch_data",
                "file": "poc/fetcher.py",
                "line_start": 4,
                "line_end": 13,
                "description": "Function that attempts to fetch data up to a given number of retries, returning a list of random integers on success or raising ConnectionError on failure."
            }
        ],
        "edges": [
            {
                "id": "e0",
                "source": "fetcher.fetch_data",
                "target": "random.random",
                "description": "Checks if a random value is below the success threshold"
            },
            {
                "id": "e1",
                "source": "fetcher.fetch_data",
                "target": "random.randint",
                "description": "Generates random integers for the fetched data list"
            }
        ]
    }
}